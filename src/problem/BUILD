cc_library(
    name = "01_matrix",
    hdrs = glob([
        "01_matrix.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "01_matrix_test",
    srcs = [
        "01_matrix_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":01_matrix",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "add_two_numbers",
    hdrs = glob([
        "add_two_numbers.h",
    ]),
    deps = [
        "//src/problem:list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "add_two_numbers_test",
    srcs = [
        "add_two_numbers_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":add_two_numbers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "all_int_in_range",
    hdrs = glob([
        "all_int_in_range.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "all_int_in_range_test",
    srcs = [
        "all_int_in_range_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":all_int_in_range",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "append_k_integers",
    hdrs = glob([
        "append_k_integers.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "append_k_integers_test",
    srcs = [
        "append_k_integers_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":append_k_integers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "assign_cookies",
    hdrs = glob([
        "assign_cookies.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "assign_cookies_test",
    srcs = [
        "assign_cookies_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":assign_cookies",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "best_time_buy_stock1",
    hdrs = glob([
        "best_time_buy_stock1.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "best_time_buy_stock1_test",
    srcs = [
        "best_time_buy_stock1_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":best_time_buy_stock1",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "combinations",
    hdrs = glob([
        "combinations.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "combinations_test",
    srcs = [
        "combinations_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":combinations",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "max_area",
    hdrs = glob([
        "max_area.h",
    ]),
    visibility = ["//visibility:public"],
)


cc_test(
    name = "max_area_test",
    srcs = [
        "max_area_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":max_area",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "count_collisions_on_road",
    hdrs = glob([
        "count_collisions_on_road.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "count_collisions_on_road_test",
    srcs = [
        "count_collisions_on_road_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":count_collisions_on_road",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "generate_parenthesis",
    hdrs = glob([
        "generate_parenthesis.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "generate_parenthesis_test",
    srcs = [
        "generate_parenthesis_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":generate_parenthesis",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "house_robber",
    hdrs = glob([
        "house_robber.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "house_robber_test",
    srcs = [
        "house_robber_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":house_robber",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "inorder_traversal",
    hdrs = glob([
        "inorder_traversal.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "inorder_traversal_test",
    srcs = [
        "inorder_traversal_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":inorder_traversal",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "k_distant_index",
    hdrs = glob([
        "k_distant_index.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "k_distant_index_test",
    srcs = [
        "k_distant_index_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":k_distant_index",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "letter_case_permutation",
    hdrs = glob([
        "letter_case_permutation.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "letter_case_permutation_test",
    srcs = [
        "letter_case_permutation_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":letter_case_permutation",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "level_order",
    hdrs = glob([
        "level_order.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "level_order_test",
    srcs = [
        "level_order_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":level_order",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "linked_list_cycle",
    hdrs = glob([
        "linked_list_cycle.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "linked_list_cycle_test",
    srcs = [
        "linked_list_cycle_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":linked_list_cycle",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "list_node",
    hdrs = glob([
        "list_node.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "longest_consecutive_sequence",
    hdrs = glob([
        "longest_consecutive_sequence.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "longest_consecutive_sequence_test",
    srcs = [
        "longest_consecutive_sequence_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":longest_consecutive_sequence",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "longest_harmonious_subsequence",
    hdrs = glob([
        "longest_harmonious_subsequence.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "longest_harmonious_subsequence_test",
    srcs = [
        "longest_harmonious_subsequence_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":longest_harmonious_subsequence",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "longest_increasing_subsequence",
    hdrs = glob([
        "longest_increasing_subsequence.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "longest_increasing_subsequence_test",
    srcs = [
        "longest_increasing_subsequence_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":longest_increasing_subsequence",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "longest_substring_without_repeating_char",
    hdrs = glob([
        "longest_substring_without_repeating_char.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "longest_substring_without_repeating_char_test",
    srcs = [
        "longest_substring_without_repeating_char_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":longest_substring_without_repeating_char",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "lrucache",
    hdrs = glob([
        "lru_cache.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "lru_cache_test",
    srcs = [
        "lru_cache_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":lrucache",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "maximum_subarray",
    hdrs = glob([
        "maximum_subarray.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "maximum_subarray_test",
    srcs = [
        "maximum_subarray_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":maximum_subarray",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "median_of_two_sorted_arrays",
    hdrs = glob([
        "median_of_two_sorted_arrays.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "median_of_two_sorted_arrays_test",
    srcs = [
        "median_of_two_sorted_arrays_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":median_of_two_sorted_arrays",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "merge_intervals",
    hdrs = glob([
        "merge_intervals.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "merge_intervals_test",
    srcs = [
        "merge_intervals_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":merge_intervals",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "merge_two_sorted_list",
    hdrs = glob([
        "merge_two_sorted_list.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "merge_two_sorted_list_test",
    srcs = [
        "merge_two_sorted_list_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":merge_two_sorted_list",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "middle_of_list",
    hdrs = glob([
        "middle_of_list.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "middle_of_list_test",
    srcs = [
        "middle_of_list_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":middle_of_list",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "most_freq_num_following_key",
    hdrs = glob([
        "most_freq_num_following_key.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "most_freq_num_following_key_test",
    srcs = [
        "most_freq_num_following_key_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":most_freq_num_following_key",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "next_greater_element1",
    hdrs = glob([
        "next_greater_element1.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "next_greater_element1_test",
    srcs = [
        "next_greater_element1_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":next_greater_element1",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "next_greater_element2",
    hdrs = glob([
        "next_greater_element2.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "next_greater_element2_test",
    srcs = [
        "next_greater_element2_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":next_greater_element2",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "pascal_triangle",
    hdrs = glob([
        "pascal_triangle.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "pascal_triangle_test",
    srcs = [
        "pascal_triangle_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":pascal_triangle",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "permutation_in_string",
    hdrs = glob([
        "permutation_in_string.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "permutation_in_string_test",
    srcs = [
        "permutation_in_string_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":permutation_in_string",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "permutations",
    hdrs = glob([
        "permutations.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "permutations_test",
    srcs = [
        "permutations_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":permutations",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "postorder_traversal",
    hdrs = glob([
        "postorder_traversal.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "postorder_traversal_test",
    srcs = [
        "postorder_traversal_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":postorder_traversal",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "preorder_traversal",
    hdrs = glob([
        "preorder_traversal.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "preorder_traversal_test",
    srcs = [
        "preorder_traversal_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":preorder_traversal",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "queue_using_stack",
    hdrs = glob([
        "queue_using_stack.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "queue_using_stack_test",
    srcs = [
        "queue_using_stack_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":queue_using_stack",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "remove_linked_list_elements",
    hdrs = glob([
        "remove_linked_list_elements.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "remove_linked_list_elements_test",
    srcs = [
        "remove_linked_list_elements_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":remove_linked_list_elements",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "remove_make_strictly_inc",
    hdrs = glob([
        "remove_make_strictly_inc.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "remove_make_strictly_inc_test",
    srcs = [
        "remove_make_strictly_inc_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":remove_make_strictly_inc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "remove_nth_node_from_end",
    hdrs = glob([
        "remove_nth_node_from_end.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "remove_nth_node_from_end_test",
    srcs = [
        "remove_nth_node_from_end_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":remove_nth_node_from_end",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "reshape_matrix",
    hdrs = glob([
        "reshape_matrix.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "reshape_matrix_test",
    srcs = [
        "reshape_matrix_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":reshape_matrix",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "reverse_integer",
    hdrs = glob([
        "reverse_integer.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "reverse_integer_test",
    srcs = [
        "reverse_integer_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":reverse_integer",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "reverse_words_in_string3",
    hdrs = glob([
        "reverse_words_in_string3.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "reverse_words_in_string3_test",
    srcs = [
        "reverse_words_in_string3_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":reverse_words_in_string3",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "rotate_array",
    hdrs = glob([
        "rotate_array.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "rotate_array_test",
    srcs = [
        "rotate_array_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":rotate_array",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "rotate_list",
    hdrs = glob([
        "rotate_list.h",
    ]),
    deps = [
        ":list_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "rotate_list_test",
    srcs = [
        "rotate_list_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":rotate_list",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "rotting_oranges",
    hdrs = glob([
        "rotting_oranges.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "rotting_oranges_test",
    srcs = [
        "rotting_oranges_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":rotting_oranges",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "search_2d_matrix1",
    hdrs = glob([
        "search_2d_matrix1.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "search_2d_matrix1_test",
    srcs = [
        "search_2d_matrix1_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":search_2d_matrix1",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "search_insert_position",
    hdrs = glob([
        "search_insert_position.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "search_insert_position_test",
    srcs = [
        "search_insert_position_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":search_insert_position",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "search_rotated_sorted",
    hdrs = glob([
        "search_rotated_sorted.h",
    ]),
    visibility = ["//visibility:public"],
)


cc_test(
    name = "search_rotated_sorted_test",
    srcs = [
        "search_rotated_sorted_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":search_rotated_sorted",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "sort_colors",
    hdrs = glob([
        "sort_colors.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "sort_colors_test",
    srcs = [
        "sort_colors_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":sort_colors",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "sort_jumbled_numbers",
    hdrs = glob([
        "sort_jumbled_numbers.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "sort_jumbled_numbers_test",
    srcs = [
        "sort_jumbled_numbers_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":sort_jumbled_numbers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "subsets",
    hdrs = glob([
        "subsets.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "subsets_test",
    srcs = [
        "subsets_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":subsets",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "topmost_after_k_moves",
    hdrs = glob([
        "topmost_after_k_moves.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "topmost_after_k_moves_test",
    srcs = [
        "topmost_after_k_moves_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":topmost_after_k_moves",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "trap_water",
    hdrs = glob([
        "trap_water.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "trap_water_test",
    srcs = [
        "trap_water_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":trap_water",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "tree_node",
    hdrs = glob([
        "tree_node.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "triangle",
    hdrs = glob([
        "triangle.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "triangle_test",
    srcs = [
        "triangle_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":triangle",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "valid_anagram",
    hdrs = glob([
        "valid_anagram.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "valid_anagram_test",
    srcs = [
        "valid_anagram_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":valid_anagram",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "valid_sudoku",
    hdrs = glob([
        "valid_sudoku.h",
    ]),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "valid_sudoku_test",
    srcs = [
        "valid_sudoku_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":valid_sudoku",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "zigzag_level_order",
    hdrs = glob([
        "zigzag_level_order.h",
    ]),
    deps = [
        ":tree_node",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "zigzag_level_order_test",
    srcs = [
        "zigzag_level_order_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":zigzag_level_order",
        "@com_google_googletest//:gtest_main",
    ],
)

